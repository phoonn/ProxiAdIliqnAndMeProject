@model IEnumerable<WebStore.LaptopCrudService.LaptopDTO>

@{
    ViewBag.Title = "Index";
}

<h2>View</h2>

@if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
{
    <p>
        @Html.ActionLink("Create New", "Create", null, new { @class = "btnflt4" })
    </p>
}

<table class="table indextable">
    <tr>
        <th>
            Image
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HardDisk)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Model)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OS)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Processor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ram)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Screen)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @{
                    if (item.Image != null)
                    {
                        var base64 = Convert.ToBase64String(item.Image.ToArray());
                        var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                        <img src="@imgSrc" class="smallimage" />
                    }
                    else
                    {
                        <p>No Image</p>
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HardDisk)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OS)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Processor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ram)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Screen)
            </td>
            @if (User.IsInRole("Administrator") || User.IsInRole("Moderator"))
            {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.LaptopID }, new { @class = "btnflt4" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.LaptopID }, new { @class = "btnflt4" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.LaptopID }, new { @class = "btnflt4" })
                </td>
            }
            else
            {
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.LaptopID }, new { @class = "btnflt4" })
                </td>
            }
            @if (!User.Identity.IsAuthenticated)
                {
                <td>
                    <a href="@Url.Action("Register", "Auth")">Register to add to favourites !</a>
                </td>
            }
            else
            {
                if (item.UsersLaptops.Select(x=>x.LaptopID).Contains(item.LaptopID))
                {
                    <td>
                        <button type="button" class="changeFav btnflt4" value="@item.LaptopID">Remove from favourites</button>
                    </td>
                }
                else
                {
                    <td>
                        <button type="button" class="changeFav btnflt4" value="@item.LaptopID">Add to favourites</button>
                    </td>
                }
            }
        </tr>
                    }

</table>

<script src="~/Scripts/changeFavourites.js" type="text/javascript"></script>
